<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exploitation on Home</title>
    <link>http://localhost:1313/categories/exploitation/</link>
    <description>Recent content in Exploitation on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jan 2025 17:48:35 +0100</lastBuildDate><atom:link href="http://localhost:1313/categories/exploitation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows Binary Exploitation with Space Constraints</title>
      <link>http://localhost:1313/blog/windows-buffer-overflow/</link>
      <pubDate>Tue, 28 Jan 2025 17:48:35 +0100</pubDate>
      
      <guid>http://localhost:1313/blog/windows-buffer-overflow/</guid>
      <description>&lt;p&gt;A buffer overflow is a flaw that allows an attacker to write more data to a buffer located on the stack than it can hold, which introduces security vulnerabilities due to the ability to overwrite adjacent memory addresses. In this post, I showcase the exploitation of a stack-based buffer overflow on Windows, where constraints of the target program required me to tweak my payload buffer to achieve code execution.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>